pwrsamp<-pwr.2p2n.test(h=effect, n1=nrlfsbp, n2=rlfsbp, sig.level=0.05)$power
pctRLFS<-rep(frac,2)
sample<-c("10 Trios+GoNL/deCODE Trios", "10 Trios")
power<-c(pwrfull, pwrsamp)
effect_size<-rep(effect, 2)
p1a<-1.3e-8
h1a<-2*asin(sqrt(338*p1a))
p1b<-sin((effect-h1a)/2)^2/338
p2a<-p1a
h2a<-2*asin(sqrt(10*p1a))
p2b<-sin((effect-h2a)/2)^2/10
effect_size[1]<-(p1a/p1b)
effect_size[2]<-(p2a/p2b)
dat_j<-data.frame(pctRLFS, sample, power, effect_size)
sample_data<-rbind(sample_data, dat_j)
}
rlfs_power2<-rbind(rlfs_power2, sample_data)
}
rlfs_power2<-rlfs_power2[rlfs_power2$effect_size<5,]
append<-data.frame(pctRLFS=rep(seq(0.01, 0.06, by=0.01), 100),
sample="10 Trios+GoNL/deCODE Trios",
power=1,
effect_size=seq(1.9, max(rlfs_power2$effect_size), length.out=100))
rlfs_power2<-rbind(rlfs_power2, append)
rlfs_power2$group<-paste0(rlfs_power2$sample, rlfs_power2$pctRLFS)
ggplot(rlfs_power2,
aes(x=effect_size,
y=power,
group=group,
colour=factor(pctRLFS),
linetype=sample))+
geom_line(size=1.5)+
scale_colour_manual(values=brewer.pal(7, "BuGn")[2:7])+
geom_hline(yintercept=0.8, linetype="longdash")+
theme_classic()+
xlab("Effect Size (fold-change in mutation rate)")+
ylab("Power")+
guides(colour=guide_legend("Proportion of DNMs\n occurring in RLFS"))+
theme(legend.position=c(0.85, 0.3),
legend.background = element_rect(colour = "black"),
legend.title=element_text(size=16),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.x=element_text(size=14),
axis.text.y=element_text(size=14))
ggsave("rlfs_power2.png", height=7, width=7)
rlfs_power<-data.frame()
nfull<-16753
nsamp<-800
for(i in 1:100){
effect<-i/100
sample_data<-data.frame()
for(j in 1:6){
frac<-j/100
n1full<-frac*nfull
n2full<-nfull-n1full
n1samp<-frac*nsamp
n2samp<-nsamp-n1samp
pwrfull<-pwr.2p2n.test(h=effect, n1=n1full, n2=n2full, sig.level=0.05)$power
pwrsamp<-pwr.2p2n.test(h=effect, n1=n1samp, n2=n2samp, sig.level=0.05)$power
pctRLFS<-rep(frac,2)
sample<-c("10 Trios+GoNL/deCODE Trios", "10 Trios")
power<-c(pwrfull, pwrsamp)
effect_size<-rep(effect, 2)
dat_j<-data.frame(pctRLFS, sample, power, effect_size)
sample_data<-rbind(sample_data, dat_j)
}
rlfs_power<-rbind(rlfs_power, sample_data)
}
rlfs_power$group<-paste0(rlfs_power$sample, rlfs_power$pctRLFS)
ggplot(rlfs_power,
aes(x=effect_size,
y=power,
group=group,
colour=factor(pctRLFS),
linetype=sample))+
geom_line(size=1.5)+
scale_colour_manual(values=brewer.pal(7, "PuRd")[2:7])+
geom_hline(yintercept=0.8, linetype="longdash")+
theme_classic()+
xlab("Effect Size (Cohen's H)")+
ylab("Power")+
guides(colour=guide_legend("Proportion of DNMs\n occurring in RLFS"))+
theme(legend.position=c(0.85, 0.3),
legend.background = element_rect(colour = "black"),
legend.title=element_text(size=16),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.x=element_text(size=14),
axis.text.y=element_text(size=14))
ggsave("rlfs_power.png", height=7, width=7)
ggplot(rlfs_power2,
aes(x=effect_size,
y=power,
group=group,
colour=factor(pctRLFS),
linetype=sample))+
geom_line(size=1.5)+
scale_colour_manual(values=brewer.pal(7, "BuGn")[2:7])+
geom_hline(yintercept=0.8, linetype="longdash")+
theme_classic()+
xlab("Effect Size (fold-change in mutation rate)")+
ylab("Power")+
guides(colour=guide_legend("Proportion of DNMs\n occurring in RLFS"))+
theme(legend.position=c(0.85, 0.3),
legend.background = element_rect(colour = "black"),
legend.title=element_text(size=16),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.x=element_text(size=14),
axis.text.y=element_text(size=14))
ggsave("rlfs_power2.png", height=10, width=10)
ggplot(rlfs_power,
aes(x=effect_size,
y=power,
group=group,
colour=factor(pctRLFS),
linetype=sample))+
geom_line(size=1.5)+
scale_colour_manual(values=brewer.pal(7, "PuRd")[2:7])+
geom_hline(yintercept=0.8, linetype="longdash")+
theme_classic()+
xlab("Effect Size (Cohen's H)")+
ylab("Power")+
guides(colour=guide_legend("Proportion of DNMs\n occurring in RLFS"))+
theme(legend.position=c(0.85, 0.3),
legend.background = element_rect(colour = "black"),
legend.title=element_text(size=16),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.x=element_text(size=14),
axis.text.y=element_text(size=14))
ggsave("rlfs_power.png", height=10, width=10)
ggplot(rlfs_power,
aes(x=effect_size,
y=power,
group=group,
colour=factor(pctRLFS),
linetype=sample))+
geom_line(size=1.5)+
scale_colour_manual(values=brewer.pal(7, "PuRd")[2:7])+
geom_hline(yintercept=0.8, linetype="longdash")+
theme_classic()+
xlab("Effect Size (Cohen's H)")+
ylab("Power")+
guides(colour=guide_legend("Proportion of DNMs\n occurring in RLFS"))+
theme(legend.position=c(0.85, 0.3),
legend.background = element_rect(colour = "black"),
legend.title=element_text(size=16),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.x=element_text(size=14),
axis.text.y=element_text(size=14))
ggsave("rlfs_power.png", height=8, width=8)
ggplot(rlfs_power2,
aes(x=effect_size,
y=power,
group=group,
colour=factor(pctRLFS),
linetype=sample))+
geom_line(size=1.5)+
scale_colour_manual(values=brewer.pal(7, "BuGn")[2:7])+
geom_hline(yintercept=0.8, linetype="longdash")+
theme_classic()+
xlab("Effect Size (fold-change in mutation rate)")+
ylab("Power")+
guides(colour=guide_legend("Proportion of DNMs\n occurring in RLFS"))+
theme(legend.position=c(0.85, 0.3),
legend.background = element_rect(colour = "black"),
legend.title=element_text(size=16),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.x=element_text(size=14),
axis.text.y=element_text(size=14))
ggsave("rlfs_power2.png", height=8, width=8)
11020/258
43/.69
rlfs_power2<-data.frame()
nbp<-3e9
ns<-800
for(i in 1:100){
effect<-i/100000
sample_data<-data.frame()
for(j in 1:6){
frac<-j/100
# n1full<-frac*nfull
# n2full<-nfull-n1full
# n1samp<-frac*nsamp
# n2samp<-nsamp-n1samp
rlfsbp<-frac*nbp
nrlfsbp<-nbp-rlfsbp
pwrfull<-pwr.2p2n.test(h=effect, n1=nrlfsbp, n2=rlfsbp, sig.level=0.05)$power
pwrsamp<-pwr.2p2n.test(h=effect, n1=nrlfsbp, n2=rlfsbp, sig.level=0.05)$power
pctRLFS<-rep(frac,2)
sample<-c("10 Trios+GoNL/deCODE Trios", "10 Trios")
power<-c(pwrfull, pwrsamp)
effect_size<-rep(effect, 2)
p1a<-1.25e-8
h1a<-2*asin(sqrt(338*p1a))
p1b<-sin((effect-h1a)/2)^2/338
p2a<-p1a
h2a<-2*asin(sqrt(10*p1a))
p2b<-sin((effect-h2a)/2)^2/10
effect_size[1]<-(p1a/p1b)
effect_size[2]<-(p2a/p2b)
dat_j<-data.frame(pctRLFS, sample, power, effect_size)
sample_data<-rbind(sample_data, dat_j)
}
rlfs_power2<-rbind(rlfs_power2, sample_data)
}
rlfs_power2<-rlfs_power2[rlfs_power2$effect_size<5,]
append<-data.frame(pctRLFS=rep(seq(0.01, 0.06, by=0.01), 100),
sample="10 Trios+GoNL/deCODE Trios",
power=1,
effect_size=seq(1.9, max(rlfs_power2$effect_size), length.out=100))
rlfs_power2<-rbind(rlfs_power2, append)
rlfs_power2$group<-paste0(rlfs_power2$sample, rlfs_power2$pctRLFS)
ggplot(rlfs_power2,
aes(x=effect_size,
y=power,
group=group,
colour=factor(pctRLFS),
linetype=sample))+
geom_line(size=1.5)+
scale_colour_manual(values=brewer.pal(7, "BuGn")[2:7])+
geom_hline(yintercept=0.8, linetype="longdash")+
theme_classic()+
xlab("Effect Size (fold-change in mutation rate)")+
ylab("Power")+
guides(colour=guide_legend("Proportion of DNMs\n occurring in RLFS"))+
theme(legend.position=c(0.85, 0.3),
legend.background = element_rect(colour = "black"),
legend.title=element_text(size=16),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.x=element_text(size=14),
axis.text.y=element_text(size=14))
ggsave("rlfs_power2.png", height=8, width=8)
.015*11020
161/11020
.015*800
11020+4933
15953*0.06
usePackage(VennDiagram)
venn.plot <- draw.quintuple.venn(
area1 = 301,
area2 = 321,
area3 = 311,
area4 = 321,
area5 = 301,
n12 = 188,
n13 = 191,
n14 = 184,
n15 = 177,
n23 = 194,
draw.single.venn 13
n24 = 197,
n25 = 190,
n34 = 190,
n35 = 173,
n45 = 186,
n123 = 112,
n124 = 108,
n125 = 108,
n134 = 111,
n135 = 104,
n145 = 104,
n234 = 111,
n235 = 107,
n245 = 110,
n345 = 100,
n1234 = 61,
n1235 = 60,
n1245 = 59,
n1345 = 58,
n2345 = 57,
n12345 = 31,
category = c("A", "B", "C", "D", "E"),
fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3", "orchid3"),
cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3", "orchid3"),
cat.cex = 2,
margin = 0.05,
cex = c(1.5, 1.5, 1.5, 1.5, 1.5, 1, 0.8, 1, 0.8, 1, 0.8, 1, 0.8, 1, 0.8,
1, 0.55, 1, 0.55, 1, 0.55, 1, 0.55, 1, 0.55, 1, 1, 1, 1, 1, 1.5),
ind = TRUE
)
venn.plot <- draw.quintuple.venn(
area1 = 301,
area2 = 321,
area3 = 311,
area4 = 321,
area5 = 301,
n12 = 188,
n13 = 191,
n14 = 184,
n15 = 177,
n23 = 194,
n24 = 197,
n25 = 190,
n34 = 190,
n35 = 173,
n45 = 186,
n123 = 112,
n124 = 108,
n125 = 108,
n134 = 111,
n135 = 104,
n145 = 104,
n234 = 111,
n235 = 107,
n245 = 110,
n345 = 100,
n1234 = 61,
n1235 = 60,
n1245 = 59,
n1345 = 58,
n2345 = 57,
n12345 = 31,
category = c("A", "B", "C", "D", "E"),
fill = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3", "orchid3"),
cat.col = c("dodgerblue", "goldenrod1", "darkorange1", "seagreen3", "orchid3"),
cat.cex = 2,
margin = 0.05,
cex = c(1.5, 1.5, 1.5, 1.5, 1.5, 1, 0.8, 1, 0.8, 1, 0.8, 1, 0.8, 1, 0.8,
1, 0.55, 1, 0.55, 1, 0.55, 1, 0.55, 1, 0.55, 1, 1, 1, 1, 1, 1.5),
ind = TRUE
)
source("http://www.bioconductor.org/biocLite.R")
biocLite("limma")
library(limma)
exp(-2)/exp(-4)
exp(-2)/exp(-6)
exp(-1.5)/exp(-7)
0.06*3e9
0.05*3e9
0.95*3e9
161/11020
gonl<-read.table("GoNL_DNMs.txt", header=TRUE)
head(gonl)
histogram(rnbinom(100,45))
hist(rnbinom(100,45))
hist(rnbinom(100,1000,45))
hist(rnbinom(100,1000,size=45))
hist(rnbinom(100,1000,mu=45))
var(rnbinom(100,1000,mu=45))
var(rnbinom(mu=100,size=104,mu=45))
var(rnbinom(n=100,size=104,mu=45))
45^2/61
var(rnbinom(n=100,size=33,mu=45))
var(rnbinom(n=1000,size=33,mu=45))
hist(rnbinom(n=1000,size=33,mu=45))
hist(rnbinom(n=343,size=33,mu=45))
ts
ts()
revcomp <- function(DNAstr) {
step1 <- chartr("ACGT","TGCA",DNAstr)
step2 <- unlist(strsplit(step1, split=""))
step3 <- rev(step2)
step4 <- paste(step3, collapse="")
return(step4)
}
myPaletteCat <- colorRampPalette(rev(brewer.pal(8, "Dark2")), space="Lab")
myPaletteCat(4)
rbg<-c(myPaletteB(6)[1:3],myPaletteR(6)[1:3], myPaletteG(6)[1:3])
hist(rnbinom(n=343,size=33,mu=45))
hist(rnbinom(n=343,size=33,mu=45))
update.packages(checkBuilt = TRUE)
req(installr)
usePackage(installr)
updateR()
require(ggplot2)
require(Rcpp)
usePackage(Rcpp)
ggplot(mtcars, aes(x=cyl,y=model))+geom_point()
require(ggplot2)
ggplot(mtcars, aes(x=cyl,y=model))+geom_point()
head(mtcars)
ggplot(mtcars, aes(x=cyl,y=disp))+geom_point()
ggplot()
updatePackages()
?update
update.packages()
require(Biostrings)
cs<-read.table("cancer_sigs.txt", header=T, sep="\t")
cs<-cs[,1:33]
snames<-paste0("S", 1:30)
names(cs)<-c("Category", "Seq3", "Type", snames)
cs$Category<-as.factor(cs$Category)
levels(cs$Category)<-c("GC_TA", "GC_CG", "GC_AT", "AT_TA", "AT_GC", "AT_CG")
revcomp <- function(DNAstr) {
step1 <- chartr("ACGT","TGCA",DNAstr)
step2 <- unlist(strsplit(step1, split=""))
step3 <- rev(step2)
step4 <- paste(step3, collapse="")
return(step4)
}
cs$Seq3a<-as.character(reverse(complement(DNAStringSet(cs$Seq3))))
#cs<-cs %>% mutate(Seq3b=revcomp(Seq3))
#cs$Seq3a<-apply(cs$Seq3, 2, function(x) revcomp(x))
cs$Sequence <- ifelse(
substr(cs$Seq3,2,2)<substr(cs$Seq3a,2,2),
paste0(cs$Seq3,"(",cs$Seq3a,")"),
paste0(cs$Seq3a,"(",cs$Seq3,")")
)
rates<-read.table("7bp_1000k_rates.txt", header=T)
rates$gp<-"ERVs"
rates_c<-read.table("7bp_1000k_common_rates.txt", header=T)
rates_c$gp<-"Common"
rates_m<-rbind(rates, rates_c)
rates3<-rates_m %>%
mutate(Category=gsub("cpg_", "", Category2),
Seq3=substr(rates_m$Sequence, 3, 5)) %>%
group_by(Category, Seq3, gp) %>%
summarise(num=sum(num),
COUNT=sum(COUNT)) %>%
ungroup() %>%
mutate(rel_prop=num/COUNT,
prop=num/sum(num),
Seq3a=as.character(reverse(complement(DNAStringSet(Seq3)))),
Sequence=paste0(Seq3, "(", Seq3a, ")"))
csm<-merge(cs, rates3, by=c("Category", "Sequence"))
csmcor<-rbind(data.frame(cor(csm[csm$gp=="ERVs",c(5:34,41)]), gp="ERVs"),
data.frame(cor(csm[csm$gp!="ERVs",c(5:34,41)]), gp="Common"))
csmcor$Sig<-rep(names(csmcor)[1:31], 2)
csmcor_p<-csmcor[c(1:30, 32:61),31:33]
csmcor_p<-transform(csmcor_p, Sig=reorder(Sig, prop))
# csmcor_p$gp<-ifelse(csmcor_p$Sig %in% c("S1", "S5"), "top", "bottom")
ggplot(csmcor_p,
aes(x=Sig,
y=prop,
group=gp,
fill=gp,
colour=gp))+
geom_bar(stat="identity",
position="dodge",
width=0.75)+
coord_flip()+
ylab("Correlation with mutation signatures")+
xlab("Mutation signatures")+
scale_colour_brewer(palette="Set1")+
scale_fill_brewer(palette="Set1")+
theme_bw()+
theme(
#legend.position="none",
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.title.x=element_text(size=18),
axis.title.y=element_text(size=18),
axis.text.x=element_text(size=14),
axis.text.y=element_text(size=14))
head(csmcor)
uk10k<-read.table("uk10k_dnms_3mer.txt")
uk10k<-read.table("uk10kdnms_3mer.txt")
head(uk10k)
dim(uk10k)
head(rates_m)
head(csm)
unique(csm$Category)
dnms<-read.table("uk10k_dnms_full.txt")
head(dnms)
names(dnms)<-c("CHR", "POS", "ID", "REF", "ALT", "Sequence", "MU", "CAT", "Category")
dnms2<-dnms %>% group_by(Sequence, Category) %>% summarise(n=n(), prop=n/nrow(dnms))
dim(dnms2)
head(dnms2)
unique(dnms$Sequence)
dim(csm)
head(rates)
dim(rates3)
r3m<-merge(rates3, dnms2, by=c("Category", "Sequence"))
dim(r3m)
head(r3m)
r3m %>% group_by(gp) %>% summarise(cor=cor(prop.x, prop.y))
head(dnms)
gonldnms<-read.table("gonl_dnms_full.txt", header=T)
head(gonldnms)
gonldnms2<-gonldnms %>% group_by(SEQ3, Category) %>% summarise(n=n(), prop=n/nrow(gonldnms))
head(gonldnms2)
dim(gonldnms2)
min(gonldnms2$n)
sum(gonldnms2$n)
unique(gonldnms2$SEQ3)
unique(gonldnms$SEQ3)
gonldnms<-read.table("gonl_dnms_full.txt", header=T)
gonldnms2<-gonldnms %>% group_by(SEQ3, Category) %>% summarise(n=n(), prop=n/nrow(gonldnms))
dim(gonldnms2)
head(gonldnms2)
names(gonldnms2)[1]<-"Sequence"
r3m1<-merge(r3m, gonldnms2, by=c("Category", "Sequence"))
head(r3m1)
r3m1<-merge(rates3, gonldnms2, by=c("Category", "Sequence"))
head(r3m1)
r3m1 %>% group_by(gp) %>% summarise(cor=cor(prop.x, prop.y))
min(r3m1$n)
r3m1 %>% filter(substr(Sequence, 2, 3)!="CG") %>% group_by(gp) %>% summarise(cor=cor(prop.x, prop.y))
head(r3m1)
r3m1a<-r3m1[substr(r3m1$Sequence, 2, 3)!="CG",]
r3m1a %>% group_by(gp) %>% summarise(cor=cor(prop.x, prop.y))
r3m1 %>% group_by(gp, Category) %>% summarise(cor=cor(prop.x, prop.y))
20000/3e9
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
head(rates)
dim(rates)
rates %>% group_by(Category2) %>% summarise(min=min(rel_prop), max=max(rel_prop))
rates %>% group_by(Category2) %>% summarise(min=min(rel_prop), max=max(rel_prop), fold=max/min)
rates %>% group_by(Category2) %>% summarise(min=min(rel_prop), max=max(rel_prop), fold=max/min) %>% view()
data.frame(rates %>% group_by(Category2) %>% summarise(min=min(rel_prop), max=max(rel_prop), fold=max/min))
2*pnorm(-abs(20), log=T)
2*pnorm(-abs(20), log.p=T)
shiny::runApp('C:/Users/jedidiah/Dropbox/Github/mr-eel')
